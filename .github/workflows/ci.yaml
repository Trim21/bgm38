name: ci
on:
  push:
    branches:
      - '*'
      - '**'
      - '!renovate/**'
  create:
    tags:
      - v*
  pull_request:
    branches:
      - '*'
      - '**'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.14

      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
            ${{ runner.os }}-go-

      - name: "Docker Build"
        run: docker-compose -f .github/docker-compose.yaml --log-level INFO up -d

      - run: echo "::add-path::$(go env GOPATH)/bin"

      - name: Install
        run: make install

      - name: Test Go Code
        run: go test ./...
        env:
          REDIS_HOST: 127.0.0.1
          MYSQL_HOST: 127.0.0.1

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13

      - name: Check out code
        uses: actions/checkout@v1

      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
            ${{ runner.os }}-go-

      - run: echo "::add-path::$(go env GOPATH)/bin"

      - name: Install
        run: make install

      - name: Build
        run: make
        env:
          CGO_ENABLE: '0'

  release:
    runs-on: ubuntu-18.04
    needs: build
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev' || startsWith( github.ref, 'refs/tags/v' )
    steps:
      - uses: actions/checkout@v1

      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
      - run: echo "::add-path::$(go env GOPATH)/bin"
      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
            ${{ runner.os }}-go-

      - name: Get Git Ref
        id: version
        run: |
          if [[ ${GITHUB_REF} == refs/tags* ]]; then
            echo "::set-env name=REF::latest"
            echo "::set-env name=SLUG::${GITHUB_REF:10}"
          else
            echo "::set-env name=REF::${GITHUB_REF:11}"
            echo "::set-env name=SLUG::${GITHUB_REF:11}-${GITHUB_SHA:0:7}"
          fi
          echo "::set-env name=SHA::${GITHUB_SHA:0:7}"

      - name: Build Binary
        run: make install && make release
        env:
          CGO_ENABLED: '0'

      - name: Build Docker
        run: docker build -t trim21/bgm38:$SLUG -t trim21/bgm38:$REF .

      - name: Docker Login
        run: docker login --username trim21 --password $DOCKER_PASS
        env:
          DOCKER_PASS: ${{ secrets.DOCKER_PASS }}

      - name: Publish Docker
        run: |
          docker push trim21/bgm38:$REF
          docker push trim21/bgm38:$SLUG