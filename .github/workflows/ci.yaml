name: ci
on:
  push:
    branches:
      - "*"
      - "**"
      - "!renovate/**"
  create:
    tags:
      - v*
  pull_request:
    branches:
      - "*"
      - "**"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.14

      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
            ${{ runner.os }}-go-

      - name: docker-compose up
        run: docker-compose -f .github/docker-compose.yaml --log-level INFO up -d

      - run: echo "::add-path::$(go env GOPATH)/bin"

      - name: Install
        run: make install

#      - name: Go Mod Tidy
#        run: |
#          go mod tidy
#          git diff --exit-code

      - name: Test Go Code
        run: go test -race -coverpkg=./... -coverprofile=coverage.txt -covermode=atomic ./...
        env:
          REDIS_HOST: 127.0.0.1
          MYSQL_HOST: 127.0.0.1

      - name: Codecov
        run: bash <(curl -s https://codecov.io/bash)

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13

      - name: Check out code
        uses: actions/checkout@v1

      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
            ${{ runner.os }}-go-

      - run: echo "::add-path::$(go env GOPATH)/bin"

      - name: Install
        run: make install

      - name: Build
        run: make release
        env:
          CGO_ENABLE: "0"

      - name: build docker
        run: docker build -t current .

      - name: release docker
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev' || startsWith( github.ref, 'refs/tags/v' )
        run: |
          if [[ ${GITHUB_REF} == refs/tags* ]]; then
            REF::latest
            SLUG::${GITHUB_REF:10}
          else
            REF=${GITHUB_REF:11}
            SLUG=${GITHUB_REF:11}-${GITHUB_SHA:0:7}
          fi

          SHA=${GITHUB_SHA:0:7}
          
          docker tag current trim21/bgm38:$SLUG
          docker tag current trim21/bgm38:$REF

          docker login --username trim21 --password $DOCKER_PASS

          docker push trim21/bgm38:$REF
          docker push trim21/bgm38:$SLUG

        env:
          DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
